---
import BaseLayout     from '@/layouts/BaseLayout.astro';
import Hero           from '@/components/landing/Hero.astro';
import ActionBlocks   from '@/components/landing/ActionBlocks.astro';
import CategoriesHome from '@/components/landing/CategoriesHome.astro';
import Faq            from '@/components/landing/Faq.astro';
import { getFaqs } from '../lib/strapi';



// On importe aussi BASE pour le log
import { BASE, getCategories, getActionBlocks } from '@/lib/strapi';

// Affiche la valeur de BASE pour √™tre s√ªr qu‚Äôon pointe sur le bon Strapi
console.log('üîó Strapi Base URL =', BASE);

// On r√©cup√®re les donn√©es
const [categories, actionBlocks] = await Promise.all([
  getCategories(),
  getActionBlocks(),
]);
const faqs = await getFaqs();    // ‚Üê Ajout de l‚Äôappel √† getFaqs()

---
<BaseLayout>
  <Hero />

  <!-- Qualiopi badge + mention -->
  <div class="flex flex-col items-center mt-2 mb-12 px-4">
    <img
      src="/LogoQualiopi-150dpi-AvecMarianne.png"
      alt="Certification Qualiopi"
      class="h-16"
    />
    <p class="mt-4 text-center text-sm text-zinc-600">
      La certification qualit√© a √©t√© d√©livr√©e au titre des actions de formation.
    </p>
  </div>

  <!-- Blocs d'actions (dynamiques depuis Strapi) -->
  <ActionBlocks blocks={actionBlocks} />

 <!-- Section formations avec expansion -->
<section class="py-8">
  <div class="text-center mb-8">
    <h2 class="text-3xl tracking-tighter font-light lg:text-4xl text-black mb-4">
      Nos univers de formation √† l'IA
    </h2>
    <p class="text-lg text-zinc-600 max-w-2xl mx-auto">
      Des sp√©cialisations m√©tiers pour ma√Ætriser l'IA dans votre domaine
    </p>
  </div>

  <!-- Bouton d'expansion -->
  <div class="text-center mb-8">
    <button 
      id="show-formations-btn"
      class="inline-flex items-center justify-center px-8 py-4 text-lg font-medium text-white bg-black rounded-lg hover:bg-gray-800 transition-all duration-300"
    >
      <span>D√©couvrir nos formations par domaine</span>
      <svg class="ml-3 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
      </svg>
    </button>
  </div>

<!-- Cat√©gories (masqu√©es au d√©part) -->
<div id="categories-container" class="hidden">
  <CategoriesHome categories={categories} />
  
  <!-- Bouton pour replier -->
  <div class="text-center mt-8">
    <button 
      id="hide-formations-btn"
      class="text-sm text-zinc-500 hover:text-zinc-700 transition-colors duration-200 px-4 py-2"
    >
      ‚Üë Replier les formations ‚Üë
    </button>
  </div>
</div>
</section>
   <Faq faqs={faqs} />

<!-- CSS pour le script ci dessous -->
<style>
  /* Transitions fluides pour les boutons */
  #show-formations-btn {
    transition: all 0.3s ease;
  }
  
  #show-formations-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 20px rgba(0,0,0,0.15);
  }
  
  #show-formations-btn:hover svg {
    transform: translateY(2px);
  }
  
  /* Animation pour le bouton replier */
  #hide-formations-btn {
    transition: all 0.2s ease;
  }
  
  #hide-formations-btn:hover {
    transform: translateY(-1px);
  }
</style>


<script>
  document.addEventListener('DOMContentLoaded', function() {
    const showBtn = document.getElementById('show-formations-btn');
    const hideBtn = document.getElementById('hide-formations-btn');
    const container = document.getElementById('categories-container');

    if (showBtn && hideBtn && container) {
      // Afficher les cat√©gories avec animation
      showBtn.addEventListener('click', function() {
        // Faire dispara√Ætre le bouton en fondu
        showBtn.style.opacity = '0';
        showBtn.style.transform = 'translateY(-10px)';
        
        setTimeout(() => {
          showBtn.style.display = 'none';
          
          // Pr√©parer l'animation d'entr√©e
          container.style.opacity = '0';
          container.style.transform = 'translateY(20px)';
          container.classList.remove('hidden');
          
          // Animation d'apparition
          setTimeout(() => {
            container.style.transition = 'all 0.6s ease';
            container.style.opacity = '1';
            container.style.transform = 'translateY(0)';
          }, 50);
        }, 300);
      });

      // Masquer les cat√©gories avec animation
      hideBtn.addEventListener('click', function() {
        // Animation de sortie
        container.style.transition = 'all 0.4s ease';
        container.style.opacity = '0';
        container.style.transform = 'translateY(-20px)';
        
        setTimeout(() => {
          container.classList.add('hidden');
          
          // R√©apparition du bouton
          showBtn.style.display = 'inline-flex';
          showBtn.style.opacity = '0';
          showBtn.style.transform = 'translateY(10px)';
          
          setTimeout(() => {
            showBtn.style.transition = 'all 0.4s ease';
            showBtn.style.opacity = '1';
            showBtn.style.transform = 'translateY(0)';
          }, 50);
        }, 400);
      });
    }
  });
</script>

</BaseLayout>
