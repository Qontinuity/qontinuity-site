---
export const prerender = false;

import Layout from '../../layouts/BaseLayout.astro';
import Hero from '@/components/landing/Hero.astro';
import { getSessionById } from '../../lib/strapi';

const sessionId = Astro.url.searchParams.get('session');

if (!sessionId) {
  throw new Error('Session non spécifiée');
}

// Récupération des données de la session
const session = await getSessionById(sessionId);

if (!session) {
  throw new Error('Session introuvable');
}

// Formatage de la date pour affichage
const dateFormatee = new Date(session.date).toLocaleDateString('fr-FR', {
  day: 'numeric',
  month: 'long',
  year: 'numeric'
});
---

<Layout title="Inscription - {session.formation.titre}">
  <!-- Bannière Hero -->
  <Hero logoClass="w-80 max-w-none" />
  
  <section class="w-full max-w-screen-md mx-auto px-4 py-16">

    <!-- En-tête récapitulatif -->
    <div class="bg-white rounded-2xl shadow-md p-6 mb-8">
      <h1 class="text-2xl font-bold mb-4 text-[#bf2b34]">
        Inscription à la formation
      </h1>
      
      <div class="bg-gray-50 rounded-lg p-4">
        <h2 class="font-semibold text-lg mb-2">{session.formation.titre}</h2>
        <div class="text-sm text-gray-600 space-y-1">
          <p><strong>Date :</strong> {dateFormatee}</p>
          <p><strong>Horaires :</strong> {session.heure_debut} - {session.heure_fin}</p>
          <p><strong>Mode :</strong> {session.mode}</p>
          <p><strong>Prix TTC :</strong> {session.formation.prix_ttc} €</p>
        </div>
      </div>
    </div>

    <!-- Formulaire d'inscription -->
    <div class="bg-white rounded-2xl shadow-md p-8 mb-8">
      <!-- Toggle financement -->
      <div class="mb-8">
        <h4 class="text-lg font-medium mb-4 text-center">Mode de financement</h4>
        
        <div class="bg-gray-50 rounded-xl p-4 max-w-md mx-auto">
          <div class="grid grid-cols-2 gap-2">
            <button id="btn-personnel" class="px-4 py-3 rounded-lg text-sm font-medium transition bg-white text-gray-600 border border-gray-200">
              Personnel
            </button>
            <button id="btn-entreprise" class="px-4 py-3 rounded-lg text-sm font-medium transition bg-white text-gray-600 border border-gray-200">
              Entreprise
            </button>
          </div>
        </div>
      </div>

      <!-- Formulaire Personnel -->
      <div id="form-personnel" class="form-section">
        <form id="inscription-form" class="space-y-6">
          <!-- Informations personnelles -->
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label for="nom" class="block text-sm font-medium text-gray-700 mb-2">
                Nom *
              </label>
              <input 
                type="text" 
                id="nom" 
                name="nom" 
                required
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#bf2b34] focus:border-transparent"
                placeholder="Votre nom"
              >
            </div>
            
            <div>
              <label for="prenom" class="block text-sm font-medium text-gray-700 mb-2">
                Prénom *
              </label>
              <input 
                type="text" 
                id="prenom" 
                name="prenom" 
                required
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#bf2b34] focus:border-transparent"
                placeholder="Votre prénom"
              >
            </div>
          </div>
          
          <div>
            <label for="profession" class="block text-sm font-medium text-gray-700 mb-2">
              Profession
            </label>
            <input 
              type="text" 
              id="profession" 
              name="profession"
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#bf2b34] focus:border-transparent"
              placeholder="Votre profession"
            >
          </div>

          <div>
            <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
              Email *
            </label>
            <input 
              type="email" 
              id="email" 
              name="email" 
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#bf2b34] focus:border-transparent"
              placeholder="votre.email@exemple.com"
            >
          </div>
          
          <div>
            <label for="telephone" class="block text-sm font-medium text-gray-700 mb-2">
              Téléphone *
            </label>
            <input 
              type="tel" 
              id="telephone" 
              name="telephone"
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#bf2b34] focus:border-transparent"
              placeholder="06 00 00 00 00"
            >
          </div>
          
          <!-- Champ Handicap -->
          <div class="bg-gray-50 rounded-lg p-4">
            <label class="block text-sm font-medium text-gray-700 mb-3">
              Êtes-vous en situation de handicap (PSH) ou avez-vous besoin de dispositifs particuliers d'accompagnement lors de la formation ?
            </label>
            
            <div class="flex items-center space-x-4">
              <span id="handicap-label-non" class="text-sm font-medium text-[#bf2b34]">Non</span>
              
              <!-- Toggle Switch -->
              <button type="button" id="handicap-toggle" class="relative inline-flex h-6 w-11 items-center rounded-full transition-colors bg-gray-300" role="switch">
                <span class="translate-x-1 inline-block h-4 w-4 transform rounded-full bg-white transition-transform"></span>
              </button>
              
              <span id="handicap-label-oui" class="text-sm font-medium text-gray-400">Oui</span>
            </div>
            
            <!-- Input caché pour stocker la valeur -->
            <input type="hidden" id="handicap" name="handicap" value="non">
          </div>

          <!-- Attestation rétractation -->
<div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
  <div class="flex items-start space-x-3">
    <input 
      type="checkbox" 
      id="attestation" 
      name="attestation" 
      required
      class="mt-1 h-4 w-4 text-[#bf2b34] focus:ring-[#bf2b34] border-gray-300 rounded"
    >
    <div class="flex-1">
      <label for="attestation" class="block text-sm font-medium text-gray-900 cursor-pointer">
        J'atteste que j'ai pris connaissance du fait que je bénéficie d'un délai légal de rétractation de 14 jours après mon inscription *
      </label>
      <p class="text-xs text-gray-600 mt-2">
        Par exemple, si je m'inscris aujourd'hui mon délai de rétractation est valide jusqu'au <span id="date-retractation" class="font-medium"></span>
      </p>
    </div>
  </div>
</div>

        <!-- Engagement paiement -->
<div class="bg-blue-50 border border-blue-200 rounded-lg p-4 mt-4">
  <div class="flex items-start space-x-3">
    <input 
      type="checkbox" 
      id="engagement" 
      name="engagement" 
      required
      class="mt-1 h-4 w-4 text-[#bf2b34] focus:ring-[#bf2b34] border-gray-300 rounded"
    >
    <div class="flex-1">
      <label for="engagement" class="block text-sm font-medium text-gray-900 cursor-pointer">
        Une fois le délai de rétractation passé et à réception d'une facture envoyée à l'adresse e-mail que j'ai renseignée, je m'engage à procéder dans les 48 heures au règlement de la somme de <span class="font-semibold text-[#bf2b34]">{session.formation.prix_ttc} €</span> par carte bancaire ou virement bancaire. Je disposerai d'un lien sécurisé pour effectuer le paiement en ligne. *
      </label>
    </div>
  </div>
</div>

          <!-- Bouton de soumission -->
          <div class="pt-4">
            <button 
              type="submit"
              class="w-full bg-[#bf2b34] text-white px-6 py-4 rounded-lg hover:bg-[#a1242d] transition font-semibold text-lg"
            >
              Valider mon inscription
            </button>
          </div>
        </form>
      </div>
        
      <!-- Formulaire Entreprise -->
      <div id="form-entreprise" class="form-section hidden">
        <p class="text-center text-gray-500">Formulaire entreprise à venir...</p>
      </div>
    </div>

  </section>

  <!-- Script -->
 <script>
    // ✅ Calcul de la date de rétractation
    function calculerDateRetractation() {
      const aujourdhui = new Date();
      const dateRetractation = new Date(aujourdhui);
      dateRetractation.setDate(aujourdhui.getDate() + 14);
      
      const dateFormatee = dateRetractation.toLocaleDateString('fr-FR', {
        day: 'numeric',
        month: 'long',
        year: 'numeric'
      });
      
      document.getElementById('date-retractation').textContent = dateFormatee;
    }

    // Appeler la fonction au chargement
    calculerDateRetractation();

    // Toggle financement
    const btnPersonnel = document.getElementById('btn-personnel');
    const btnEntreprise = document.getElementById('btn-entreprise');
    const formPersonnel = document.getElementById('form-personnel');
    const formEntreprise = document.getElementById('form-entreprise');
    
    function setActiveToggle(activeBtn, inactiveBtn, activeForm, inactiveForm) {
      // Styles boutons
      activeBtn.classList.add('bg-[#bf2b34]', 'text-white');
      activeBtn.classList.remove('bg-white', 'text-gray-600');
      
      inactiveBtn.classList.remove('bg-[#bf2b34]', 'text-white');
      inactiveBtn.classList.add('bg-white', 'text-gray-600');
      
      // Affichage formulaires
      activeForm.classList.remove('hidden');
      inactiveForm.classList.add('hidden');
    }
    
    // État initial : Personnel actif
    setActiveToggle(btnPersonnel, btnEntreprise, formPersonnel, formEntreprise);
    
    // Événements toggle financement
    btnPersonnel.addEventListener('click', () => {
      setActiveToggle(btnPersonnel, btnEntreprise, formPersonnel, formEntreprise);
    });
    
    btnEntreprise.addEventListener('click', () => {
      setActiveToggle(btnEntreprise, btnPersonnel, formEntreprise, formPersonnel);
    });

    // Toggle handicap
    const handicapToggle = document.getElementById('handicap-toggle');
    const handicapInput = document.getElementById('handicap');
    const handicapLabelNon = document.getElementById('handicap-label-non');
    const handicapLabelOui = document.getElementById('handicap-label-oui');

    let isHandicap = false;

    handicapToggle.addEventListener('click', () => {
      isHandicap = !isHandicap;
      
      if (isHandicap) {
        handicapToggle.classList.remove('bg-gray-300');
        handicapToggle.classList.add('bg-[#bf2b34]');
        handicapToggle.querySelector('span').classList.remove('translate-x-1');
        handicapToggle.querySelector('span').classList.add('translate-x-6');
        
        handicapLabelNon.classList.remove('text-[#bf2b34]');
        handicapLabelNon.classList.add('text-gray-400');
        handicapLabelOui.classList.remove('text-gray-400');
        handicapLabelOui.classList.add('text-[#bf2b34]');
        
        handicapInput.value = 'oui';
      } else {
        handicapToggle.classList.add('bg-gray-300');
        handicapToggle.classList.remove('bg-[#bf2b34]');
        handicapToggle.querySelector('span').classList.add('translate-x-1');
        handicapToggle.querySelector('span').classList.remove('translate-x-6');
        
        handicapLabelNon.classList.add('text-[#bf2b34]');
        handicapLabelNon.classList.remove('text-gray-400');
        handicapLabelOui.classList.add('text-gray-400');
        handicapLabelOui.classList.remove('text-[#bf2b34]');
        
        handicapInput.value = 'non';
      }
    });

    // Gestion de la soumission du formulaire
    const form = document.getElementById('inscription-form');

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const submitBtn = form.querySelector('button[type="submit"]');
      const originalText = submitBtn.textContent;
      
      submitBtn.textContent = 'Inscription en cours...';
      submitBtn.disabled = true;
      
      try {
        const formData = new FormData(form);
        const sessionId = new URLSearchParams(window.location.search).get('session');
        
        const data = {
          data: {
            session: sessionId,
            mode_de_financement: 'Personnel',
            nom: formData.get('nom'),
            prenom: formData.get('prenom'),
            profession: formData.get('profession') || '',
            email: formData.get('email'),
            telephone: formData.get('telephone') || '',
            handicap: formData.get('handicap'),
            attestation_retractation: formData.get('attestation') === 'on',
            engagement_paiement: formData.get('engagement') === 'on'
          }
        };
        
        const response = await fetch('http://82.112.254.196:1337/api/inscriptions-aux-sessions', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data)
        });
        
        if (response.ok) {
          submitBtn.textContent = '✅ Inscription réussie !';
          submitBtn.classList.remove('bg-[#bf2b34]', 'hover:bg-[#a1242d]');
          submitBtn.classList.add('bg-green-600');
          
          setTimeout(() => {
            form.innerHTML = `
              <div class="text-center py-8">
                <div class="text-6xl mb-4">🎉</div>
                <h3 class="text-xl font-semibold text-green-600 mb-2">Inscription confirmée !</h3>
                <p class="text-gray-600">Vous recevrez bientôt un email de confirmation.</p>
              </div>
            `;
          }, 2000);
          
        } else {
          const responseText = await response.text();
          throw new Error(`Erreur ${response.status}: ${responseText}`);
        }
        
      } catch (error) {
        console.error('Erreur inscription:', error);
        
        submitBtn.textContent = '❌ Erreur - Réessayer';
        submitBtn.classList.remove('bg-[#bf2b34]');
        submitBtn.classList.add('bg-red-600');
        
        setTimeout(() => {
          submitBtn.textContent = originalText;
          submitBtn.classList.remove('bg-red-600');
          submitBtn.classList.add('bg-[#bf2b34]', 'hover:bg-[#a1242d]');
          submitBtn.disabled = false;
        }, 3000);
      }
    });
</script>

</Layout>