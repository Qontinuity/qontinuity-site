---
import Layout from '../../layouts/BaseLayout.astro';
import Hero from '@/components/landing/Hero.astro';
import { getFormationBySlug } from '../../lib/strapi';

/*  ─────────────────────────────────────────────
    On rend la page en mode SSR (pas de prerender)
   ───────────────────────────────────────────── */
export const prerender = false;

const { params } = Astro;
const formation = await getFormationBySlug(params.slug);

// 🔍 DEBUG : Vérifier quelle URL est utilisée
console.log('BASE URL utilisée:', import.meta.env.VITE_STRAPI_URL);
console.log('Formation récupérée avec ID:', formation?.id);


// 🔍 DEBUG : Vérifier les données formation récupérées
console.log('Formation récupérée:', {
  id: formation?.id,
  documentId: formation?.documentId,
  titre: formation?.titre,
  slug: params.slug
});

if (!formation) {
  throw new Error('Formation introuvable');
}


// ─── AJOUT ───
const updatedAtFr = new Date(formation.updatedAt)
  .toLocaleDateString('fr-FR', { day: '2-digit', month: '2-digit', year: 'numeric' });

---

<Layout title={formation.titre}>
<!-- Bannière Hero -->
 <Hero logoClass="w-80 max-w-none" />
 

 <section class="w-full max-w-screen-lg mx-auto px-4 py-16">
  <h1 class="text-3xl font-bold mb-6 text-[#bf2b34]">
    {formation.titre}
  </h1>

    <!-- Description riche -->
   <div class="prose prose-slate max-w-none mb-10"
     set:html={formation.descriptionHtml}>
</div>



   <!-- Carte “Infos synthétiques” -->
<div class="bg-white rounded-2xl shadow-md p-6 mb-12 max-w-screen-lg mx-auto">
  <h2 class="text-lg font-semibold mb-4 text-center">Informations clés</h2>

<!-- Ligne de séparation -->
  <hr class="border-t border-gray-200 mb-6" />


  <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
    <div class="space-y-1">
      <p class="text-sm text-zinc-500">Durée</p>
      <p class="font-medium">{formation.duree}</p>
    </div>
    <div class="space-y-1">
      <p class="text-sm text-zinc-500">Prix HT</p>
      <p class="font-medium">{formation.prixHt} €</p>
    </div>
    <div class="space-y-1">
      <p class="text-sm text-zinc-500">Prix TTC</p>
      <p class="font-medium">{formation.prixTtc} €</p>
    </div>
    <div class="space-y-1">
      <p class="text-sm text-zinc-500">Niveau de départ</p>
      <p class="font-medium">{formation.niveauDepart}</p>
    </div>
    <div class="space-y-1">
      <p class="text-sm text-zinc-500">IA étudiées</p>
      <p class="font-medium text-sm">{formation.iaEtudiees}</p>
    </div>
  </div>
</div>

<!-- Toggle Inter/Intra -->
<div class="mb-8">
  <div class="bg-gray-50 rounded-2xl p-6 max-w-2xl mx-auto">
    <h3 class="text-lg font-semibold mb-4 text-center">Comment souhaitez-vous suivre cette formation ?</h3>
    
    <!-- Toggle Switch -->
    <div class="flex items-center justify-center space-x-4 mb-6">
      <span id="label-inter" class="text-sm font-medium transition-colors duration-200">
        Sessions programmées
      </span>
      
      <!-- Switch -->
      <button id="formation-toggle" class="relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-[#bf2b34] focus:ring-offset-2 bg-[#bf2b34]" role="switch" aria-labelledby="formation-mode">
        <span class="translate-x-6 inline-block h-4 w-4 transform rounded-full bg-white transition-transform"></span>
      </button>
      
      <span id="label-intra" class="text-sm font-medium text-gray-400 transition-colors duration-200">
        Formations sur mesure
      </span>
    </div>
    
    <!-- Description du mode actuel -->
    <div class="text-center">
      <p id="description-inter" class="text-sm text-gray-600">
        Rejoignez une session avec d'autres participants dans nos locaux
      </p>
      <p id="description-intra" class="text-sm text-gray-600 hidden">
        Formation organisée par votre entreprise dans ses locaux
      </p>
    </div>
  </div>
</div>

<!-- Section Formation Intra (masquée par défaut) -->
<div id="section-intra" class="hidden mb-12">
  <div class="bg-white rounded-2xl shadow-md p-8">
    <h3 class="text-xl font-semibold mb-6 text-[#bf2b34] text-center">
      Formation sur mesure dans votre entreprise
    </h3>
    
    <div class="prose max-w-none mb-8">
      <p class="text-gray-700 mb-4">
        Vous souhaitez organiser cette formation exclusivement pour votre équipe ? (minimum 5 personnes ou +)
        Nous adaptons le contenu à vos besoins spécifiques et nous déplaçons dans vos locaux.
      </p>
      
      <h4 class="font-semibold text-gray-900 mb-3">Processus en 3 étapes :</h4>
      <ol class="list-decimal list-inside space-y-2 text-gray-700">
        <li><strong>Analyse de vos besoins</strong> - Entretien préalable en visio ou par téléphone</li>
        <li><strong>Proposition personnalisée</strong> - Devis détaillé sous 24h</li>
        <li><strong>Organisation</strong> - Planification selon vos disponibilités</li>
      </ol>
      
      <div class="bg-gray-50 rounded-lg p-4 mt-6">
        <h5 class="font-semibold text-gray-900 mb-2">Avantages formation intra :</h5>
        <ul class="text-sm text-gray-700 space-y-1">
          <li>Contenu adapté au secteur d'activité de l'entreprise et des stagiaires</li>
          <li>Pas de frais de déplacement pour vos équipes</li>
          <li>Tarif dégressif selon le nombre de participants</li>
          <li>Dates flexibles selon votre planning</li>
        </ul>
      </div>
    </div>
    
    <div class="text-center">
      <button id="btn-devis-intra" class="bg-[#bf2b34] text-white px-8 py-3 rounded-lg hover:bg-[#a1242d] transition font-semibold">
        Demander un devis gratuit
      </button>
    </div>
  </div>
</div>

<!-- ─── Dates des sessions ─── -->
{formation.sessions.length > 0 ? (
  <div class="grid gap-6 sm:grid-cols-1 md:grid-cols-2 mb-12">
    {formation.sessions.map((s) => (
      <article
        key={s.id}
        class="bg-white rounded-2xl p-6 shadow-sm hover:shadow-lg transition flex flex-col"
      >
        <!-- Badge date -->
        <div class="flex justify-center mb-6">
          <span class="bg-black text-white rounded-lg px-6 py-2 text-xl font-bold">
            {new Date(s.date).toLocaleDateString('fr-FR', {
              day: 'numeric',
              month: 'long',
              year: 'numeric'
            })}
          </span>
        </div>

        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 flex-grow">
          <div>
            <h3 class="font-medium text-sm text-gray-600 mb-1">Heure</h3>
            <p>{s.heure_debut} – {s.heure_fin}</p>
          </div>
          <div>
            <h3 class="font-medium text-sm text-gray-600 mb-1">Mode</h3>
            <p>{s.mode}</p>
          </div>
          <div class="sm:col-span-2">
            <h3 class="font-medium text-sm text-gray-600 mb-1">Lieu</h3>
            <div set:html={s.lieu} class="prose prose-sm"></div>
          </div>
        </div>

<!-- Bouton centré en bas de la carte -->
<div class="mt-6 text-center">
  <button
    onclick={`window.location.href='/inscriptions/inscription_session?session=${s.documentId}'`}
    class="bg-[#bf2b34] text-white px-6 py-2 rounded hover:bg-[#a1242d] transition"
  >
    S'inscrire
  </button>
</div>
      </article>
    ))}
  </div>
) : (

  <div class="text-center py-8 mb-12">
    <p class="text-lg text-zinc-600 italic mb-8">
      Aucune session n'est actuellement programmée pour cette formation.
    </p>
    
    <!-- Formulaire liste d'attente -->
    <div class="bg-white rounded-2xl shadow-md p-8 max-w-2xl mx-auto">
      <h3 class="text-xl font-semibold mb-2 text-[#bf2b34]">
        Rejoignez la liste d'attente
      </h3>
      <p class="text-gray-600 mb-6">
        Soyez informé(e) dès qu'une session sera organisée pour cette formation
      </p>
      
      <form id="liste-attente-form" class="space-y-4">
        <!-- Formation (caché, rempli automatiquement) -->
<input 
  type="hidden" 
  id="formation-titre" 
  name="formation" 
  value={formation.titre}
  data-formation-id={formation.id}
  data-formation-document-id={formation.documentId}
>
        
        <!-- Prénom et Nom sur la même ligne -->
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
          <div>
            <label for="prenom" class="block text-sm font-medium text-gray-700 mb-2">
              Prénom *
            </label>
            <input 
              type="text" 
              id="prenom" 
              name="prenom" 
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#bf2b34] focus:border-transparent transition"
              placeholder="Votre prénom"
            >
          </div>
          <div>
            <label for="nom" class="block text-sm font-medium text-gray-700 mb-2">
              Nom *
            </label>
            <input 
              type="text" 
              id="nom" 
              name="nom" 
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#bf2b34] focus:border-transparent transition"
              placeholder="Votre nom"
            >
          </div>
        </div>
        
        <!-- Email -->
        <div>
          <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
            Adresse email *
          </label>
          <input 
            type="email" 
            id="email" 
            name="email" 
            required
            class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#bf2b34] focus:border-transparent transition"
            placeholder="votre.email@exemple.com"
          >
        </div>
        
        <!-- Bouton d'envoi -->
        <div class="pt-4">
          <button 
            type="submit"
            class="w-full bg-[#bf2b34] text-white px-6 py-3 rounded-lg hover:bg-[#a1242d] transition font-semibold disabled:opacity-50 disabled:cursor-not-allowed"
          >
            M'inscrire sur la liste d'attente
          </button>
        </div>
        
        <!-- Message de confirmation (masqué par défaut) -->
        <div id="confirmation-message" class="hidden mt-4 p-4 bg-green-50 border border-green-200 rounded-lg">
          <p class="text-green-800 text-sm">
            ✅ Merci ! Vous serez prévenu(e) dès qu'une session sera programmée.
          </p>
        </div>
        
        <!-- Message d'erreur (masqué par défaut) -->
        <div id="error-message" class="hidden mt-4 p-4 bg-red-50 border border-red-200 rounded-lg">
          <p class="text-red-800 text-sm">
            ❌ Une erreur s'est produite. Veuillez réessayer.
          </p>
        </div>
      </form>
    </div>
  </div>
)}

<!-- Accordéon Qualiopi -->
<section id="info-complementaires" class="mb-12">
  <h2 class="text-2xl font-semibold mb-6">Votre formation dans le détail</h2>
  <div class="space-y-4">
    <details class="bg-white rounded-lg p-4 shadow group" open>
  <summary class="cursor-pointer font-medium text-base">Résumé de la formation</summary>
      <div class="mt-3 prose prose-slate prose-sm max-w-none" set:html={formation.resumeHtml} />
    </details>
    <details class="bg-white rounded-lg p-4 shadow group">
      <summary class="cursor-pointer font-medium">Les publics concernés</summary>
      <div class="mt-3 prose prose-slate prose-sm max-w-none" set:html={formation.publicConcerneHtml} />
    </details>
    <details class="bg-white rounded-lg p-4 shadow group">
      <summary class="cursor-pointer font-medium">Les objectifs de la formation</summary>
      <div class="mt-3 prose prose-slate prose-sm max-w-none" set:html={formation.objectifsHtml} />
    </details>
    <details class="bg-white rounded-lg p-4 shadow group">
      <summary class="cursor-pointer font-medium">Le programme de la formation</summary>
      <div class="mt-3 prose prose-slate prose-sm max-w-none" set:html={formation.programmeHtml} />
    </details>
    <details class="bg-white rounded-lg p-4 shadow group">
      <summary class="cursor-pointer font-medium">L'évaluation des stagiaires</summary>
      <div class="mt-3 prose prose-slate prose-sm max-w-none" set:html={formation.evaluationHtml} />
    </details>
    <details class="bg-white rounded-lg p-4 shadow group">
      <summary class="cursor-pointer font-medium">Les moyens pédagogiques</summary>
      <div class="mt-3 prose prose-slate prose-sm max-w-none" set:html={formation.moyensPedagogiquesHtml} />
    </details>
    <details class="bg-white rounded-lg p-4 shadow group">
      <summary class="cursor-pointer font-medium">Handicap</summary>
      <div class="mt-3 prose prose-slate prose-sm max-w-none" set:html={formation.handicapHtml} />
    </details>
  </div>
</section>

<script>
  // Toggle formation inter/intra
  const toggle = document.getElementById('formation-toggle');
  const labelInter = document.getElementById('label-inter');
  const labelIntra = document.getElementById('label-intra');
  const descInter = document.getElementById('description-inter');
  const descIntra = document.getElementById('description-intra');
  const sessionsSection = document.querySelector('.grid.gap-6.sm\\:grid-cols-1.md\\:grid-cols-2');
  const sectionIntra = document.getElementById('section-intra'); // ✅ Nouvelle section
  
  let isIntra = false;
  
  function setInitialState() {
    toggle.classList.add('bg-[#bf2b34]');
    toggle.querySelector('span').classList.add('translate-x-1');
    toggle.querySelector('span').classList.remove('translate-x-6');
    
    labelInter.classList.remove('text-gray-400');
    labelInter.classList.add('text-[#bf2b34]', 'font-semibold');
    labelIntra.classList.add('text-gray-400');
    labelIntra.classList.remove('text-[#bf2b34]', 'font-semibold');
    
    descInter.classList.remove('hidden');
    descIntra.classList.add('hidden');
    
    // ✅ État initial : Sessions visibles, Intra masquée
    if (sessionsSection) sessionsSection.style.display = 'grid';
    if (sectionIntra) sectionIntra.classList.add('hidden');
  }
  
  setInitialState();
  
  toggle.addEventListener('click', () => {
    isIntra = !isIntra;
    
    if (isIntra) {
      // Mode Intra activé
      toggle.querySelector('span').classList.remove('translate-x-1');
      toggle.querySelector('span').classList.add('translate-x-6');
      
      labelInter.classList.add('text-gray-400');
      labelInter.classList.remove('text-[#bf2b34]', 'font-semibold');
      labelIntra.classList.remove('text-gray-400');
      labelIntra.classList.add('text-[#bf2b34]', 'font-semibold');
      
      descInter.classList.add('hidden');
      descIntra.classList.remove('hidden');
      
      // ✅ Masquer sessions, afficher section intra
      if (sessionsSection) sessionsSection.style.display = 'none';
      if (sectionIntra) sectionIntra.classList.remove('hidden');
      
    } else {
      // Mode Inter activé
      toggle.querySelector('span').classList.add('translate-x-1');
      toggle.querySelector('span').classList.remove('translate-x-6');
      
      labelInter.classList.remove('text-gray-400');
      labelInter.classList.add('text-[#bf2b34]', 'font-semibold');
      labelIntra.classList.add('text-gray-400');
      labelIntra.classList.remove('text-[#bf2b34]', 'font-semibold');
      
      descInter.classList.remove('hidden');
      descIntra.classList.add('hidden');
      
      // ✅ Afficher sessions, masquer section intra
      if (sessionsSection) sessionsSection.style.display = 'grid';
      if (sectionIntra) sectionIntra.classList.add('hidden');
    }
  });
</script>


<!-- Date de dernière mise à jour -->
<p class="mt-4 text-sm text-gray-500">
  Dernière mise à jour&nbsp;: {updatedAtFr}
</p>

    <!-- Placeholder pour le futur formulaire -->
    <div id="inscription-placeholder"></div>

    <script>
  const acc = document.querySelectorAll('#info-complementaires details');
  acc.forEach((d) =>
    d.addEventListener('toggle', () => {
      if (d.open) {
        acc.forEach((o) => {
          if (o !== d) o.open = false;
        });
      }
    })
  );

// ─── FORMULAIRE LISTE D'ATTENTE ───
  const listeAttenteForm = document.getElementById('liste-attente-form');
  
  if (listeAttenteForm) {
    listeAttenteForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const button = e.target.querySelector('button[type="submit"]');
      const confirmationMsg = document.getElementById('confirmation-message');
      const errorMsg = document.getElementById('error-message');
      
      // Reset des messages
      confirmationMsg.classList.add('hidden');
      errorMsg.classList.add('hidden');
      
      // État de chargement
      button.disabled = true;
      button.textContent = 'Inscription en cours...';
      
      try {
        // Récupération des données du formulaire
        const formData = new FormData(e.target);
        
        // 🔍 DEBUG : Vérification des données formation
        const formationElement = document.getElementById('formation-titre');
        const formationId = formationElement?.getAttribute('data-formation-id');
        const formationDocumentId = formationElement?.getAttribute('data-formation-document-id');
        
      // ✅ AJOUTE CES LIGNES ICI :
        console.log('strapiBase récupéré:', 'TEST');
        console.log('URL finale:', 'http://82.112.254.196:1337/api/listes-attentes');

        console.log('Element formation:', formationElement);
        console.log('data-formation-id (ID):', formationId);
        console.log('data-formation-document-id (documentId):', formationDocumentId);
        
        // Utiliser l'ID numérique pour la relation
        const relationId = formationId || formationDocumentId;
        
        const data = {
          Nom: formData.get('nom'),
          Prenom: formData.get('prenom'),
          email: formData.get('email'),
          formation: {
            id: parseInt(relationId)
        }
};
        
        console.log('Données à envoyer:', data);
        
        // Envoi vers l'API Strapi
        const response = await fetch('http://82.112.254.196:1337/api/listes-attentes', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ data })
        });
        
        if (!response.ok) {
          const errorText = await response.text();
          console.error('Erreur Strapi:', errorText);
          throw new Error(`Erreur HTTP: ${response.status}`);
        }
        
        const result = await response.json();
        console.log('Inscription réussie:', result);
        
        // Succès
        confirmationMsg.classList.remove('hidden');
        e.target.reset();
        
      } catch (error) {
        console.error('Erreur lors de l\'inscription:', error);
        errorMsg.classList.remove('hidden');
      } finally {
        // Restauration du bouton
        button.disabled = false;
        button.textContent = 'M\'inscrire sur la liste d\'attente';
      }
    });
  }

</script>

  </section>
</Layout>
